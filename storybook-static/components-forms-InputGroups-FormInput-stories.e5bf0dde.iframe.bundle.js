(self.webpackChunkneutrino_ui_kit=self.webpackChunkneutrino_ui_kit||[]).push([[247],{"./stories/components/forms/InputGroups/FormInput.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomStyling:()=>CustomStyling,Default:()=>Default,Disabled:()=>Disabled,HiddenLabel:()=>HiddenLabel,Password:()=>Password,Required:()=>Required,WithAdditionalProps:()=>WithAdditionalProps,WithHelpText:()=>WithHelpText,WithValidationError:()=>WithValidationError,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FormInput_stories});var react=__webpack_require__("./node_modules/react/index.js"),FormInput=__webpack_require__("./src/components/forms/FormInput.jsx");function ExclamationCircleIcon({title,titleId,...props},svgRef){return react.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor","aria-hidden":"true","data-slot":"icon",ref:svgRef,"aria-labelledby":titleId},props),title?react.createElement("title",{id:titleId},title):null,react.createElement("path",{fillRule:"evenodd",d:"M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-8-5a.75.75 0 0 1 .75.75v4.5a.75.75 0 0 1-1.5 0v-4.5A.75.75 0 0 1 10 5Zm0 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z",clipRule:"evenodd"}))}const esm_ExclamationCircleIcon=react.forwardRef(ExclamationCircleIcon),FormInput_stories={title:"Components/Forms/Input Groups/Form Input",component:FormInput.A,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{label:{control:"text",description:"The text to display as the label for the input field.",defaultValue:"Name"},id:{control:"text",description:"The unique identifier for the input element."},name:{control:"text",description:"The name attribute for the input element.",defaultValue:"name"},type:{control:"select",options:["text","password","email","number","url","tel"],description:"The type of input.",defaultValue:"text"},placeholder:{control:"text",description:"Placeholder text displayed inside the input.",defaultValue:"Jon Doe"},value:{control:"text",description:"The current value of the input."},onChange:{action:"changed",description:"Callback function triggered when the input value changes."},className:{control:"text",description:"Additional class names for the input element."},labelClassName:{control:"text",description:"Additional class names for the label element."},wrapperClassName:{control:"text",description:"Additional class names for the wrapper div."},disabled:{control:"boolean",description:"Disables the input when set to true.",defaultValue:!1},required:{control:"boolean",description:"Marks the input as required in forms.",defaultValue:!1},inputProps:{control:"object",description:"Additional props to pass directly to the input element."},inputStyles:{control:"object",description:"Inline styles for the input element."},labelStyles:{control:"object",description:"Inline styles for the label element."},wrapperStyles:{control:"object",description:"Inline styles for the wrapper div."},helpText:{control:"text",description:"Help text displayed below the input field."},errorText:{control:"text",description:"Error text displayed below the input field when in error state."},error:{control:"boolean",description:"Indicates whether the input is in an error state.",defaultValue:!1},icon:{control:"element",description:"Icon component to display inside the input field."},hideLabel:{control:"boolean",description:"Hides the label visually but keeps it accessible to screen readers.",defaultValue:!1},ariaDescribedby:{control:"text",description:"The id of the element that describes the input (for accessibility)."}}},Template=args=>{const[value,setValue]=(0,react.useState)(args.value||"");return react.createElement(FormInput.A,{...args,value,onChange:e=>{setValue(e.target.value),args.onChange&&args.onChange(e)}})},Default=Template.bind({});Default.args={label:"Name",placeholder:"Jon Doe"};const Disabled=Template.bind({});Disabled.args={label:"Name",placeholder:"Jon Doe",disabled:!0};const Required=Template.bind({});Required.args={label:"Email",placeholder:"you@example.com",type:"email",required:!0};const Password=Template.bind({});Password.args={label:"Password",placeholder:"••••••••",type:"password"};const CustomStyling=Template.bind({});CustomStyling.args={label:"Username",placeholder:"john_doe",className:"bg-yellow-100 border-yellow-500",labelClassName:"text-yellow-700",wrapperClassName:"w-96",inputStyles:{borderColor:"#facc15"},labelStyles:{color:"#facc15"},wrapperStyles:{maxWidth:"300px"}};const WithAdditionalProps=Template.bind({});WithAdditionalProps.args={label:"Website",placeholder:"https://example.com",type:"url",inputProps:{pattern:"https?://.+",title:"Enter a valid URL starting with http:// or https://"}};const WithHelpText=Template.bind({});WithHelpText.args={label:"Email",placeholder:"you@example.com",type:"email",helpText:"We'll only use this for spam.",ariaDescribedby:"email-description"};const WithValidationError=Template.bind({});WithValidationError.args={label:"Email",placeholder:"you@example.com",type:"email",value:"invalid-email",error:!0,errorText:"Not a valid email address.",ariaDescribedby:"email-error",icon:react.createElement(esm_ExclamationCircleIcon,{"aria-hidden":"true",className:"h-5 w-5 text-red-500"})};const HiddenLabel=Template.bind({});HiddenLabel.args={label:"Email",placeholder:"you@example.com",type:"email",hideLabel:!0};const __namedExportsOrder=["Default","Disabled","Required","Password","CustomStyling","WithAdditionalProps","WithHelpText","WithValidationError","HiddenLabel"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...Disabled.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...Required.parameters?.docs?.source}}},Password.parameters={...Password.parameters,docs:{...Password.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...Password.parameters?.docs?.source}}},CustomStyling.parameters={...CustomStyling.parameters,docs:{...CustomStyling.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...CustomStyling.parameters?.docs?.source}}},WithAdditionalProps.parameters={...WithAdditionalProps.parameters,docs:{...WithAdditionalProps.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...WithAdditionalProps.parameters?.docs?.source}}},WithHelpText.parameters={...WithHelpText.parameters,docs:{...WithHelpText.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...WithHelpText.parameters?.docs?.source}}},WithValidationError.parameters={...WithValidationError.parameters,docs:{...WithValidationError.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...WithValidationError.parameters?.docs?.source}}},HiddenLabel.parameters={...HiddenLabel.parameters,docs:{...HiddenLabel.parameters?.docs,source:{originalSource:"args => {\n  // Local state to manage the input value\n  const [value, setValue] = useState(args.value || '');\n\n  // Handler for input changes\n  const handleChange = e => {\n    setValue(e.target.value);\n    if (args.onChange) args.onChange(e);\n  };\n  return <FormInput {...args} value={value} onChange={handleChange} />;\n}",...HiddenLabel.parameters?.docs?.source}}}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/components/forms/FormInput.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);const FormInput=({label,id,name,type,placeholder,value,onChange,className,labelClassName,wrapperClassName,disabled,required,inputProps,inputStyles,labelStyles,wrapperStyles,helpText,errorText,error,icon,hideLabel,ariaDescribedby})=>{const inputId=id||name||`form-input-${Math.random().toString(36).substr(2,9)}`,defaultInputClass=`block w-full rounded-md py-1.5 px-2.5 text-gray-900 shadow-sm placeholder:text-gray-400 focus:ring-2 focus:ring-inset sm:text-sm ${error?"border-0 pr-10 ring-1 ring-inset ring-red-300 focus:ring-red-500 text-red-900 placeholder:text-red-300":"border-0 ring-1 ring-inset ring-gray-300 focus:ring-indigo-600"} ${className}`,defaultLabelClass=`block font-medium text-sm ${hideLabel?"sr-only":"text-gray-900"} ${labelClassName}`,defaultWrapperClass=`w-full ${wrapperClassName}`;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:defaultWrapperClass,style:wrapperStyles},label&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{htmlFor:inputId,className:defaultLabelClass,style:labelStyles},label),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"relative "+(label&&!hideLabel?"mt-2":"")},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{id:inputId,name,type,placeholder,value,onChange,disabled,required,"aria-invalid":error?"true":"false","aria-describedby":ariaDescribedby,className:defaultInputClass,style:inputStyles,...inputProps}),icon&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"right-0 absolute inset-y-0 flex items-center pr-3 pointer-events-none"},icon)),(helpText||errorText)&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{id:ariaDescribedby,className:"mt-2 text-sm "+(error?"text-red-600":"text-gray-500")},error?errorText:helpText))};FormInput.propTypes={label:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,id:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,name:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,type:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,placeholder:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,value:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,onChange:prop_types__WEBPACK_IMPORTED_MODULE_1___default().func,className:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,labelClassName:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,wrapperClassName:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,disabled:prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool,required:prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool,inputProps:prop_types__WEBPACK_IMPORTED_MODULE_1___default().object,inputStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default().object,labelStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default().object,wrapperStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default().object,helpText:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,errorText:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,error:prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool,icon:prop_types__WEBPACK_IMPORTED_MODULE_1___default().element,hideLabel:prop_types__WEBPACK_IMPORTED_MODULE_1___default().bool,ariaDescribedby:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string},FormInput.defaultProps={label:"Name",id:"",name:"name",type:"text",placeholder:"Jon Doe",value:"",onChange:()=>{},className:"",labelClassName:"",wrapperClassName:"",disabled:!1,required:!1,inputProps:{},inputStyles:{},labelStyles:{},wrapperStyles:{},helpText:"",errorText:"",error:!1,icon:null,hideLabel:!1,ariaDescribedby:""};const __WEBPACK_DEFAULT_EXPORT__=FormInput;FormInput.__docgenInfo={description:"FormInput Component\n\nRenders a customizable labeled input field with optional help text, error message, and icon.\n\nThis component is designed to be flexible and reusable as part of a UI kit.\nYou can customize its appearance by overriding default styles such as colors,\nfonts, and ring styles through various props. It supports different input types,\nplaceholders, and can be integrated with form handling logic.",methods:[],displayName:"FormInput",props:{label:{defaultValue:{value:"'Name'",computed:!1},description:"The text to display as the label for the input field",type:{name:"string"},required:!1},id:{defaultValue:{value:"''",computed:!1},description:"The unique identifier for the input element",type:{name:"string"},required:!1},name:{defaultValue:{value:"'name'",computed:!1},description:"The name attribute for the input element, useful for form submissions",type:{name:"string"},required:!1},type:{defaultValue:{value:"'text'",computed:!1},description:"The type of input (e.g., 'text', 'password', 'email')",type:{name:"string"},required:!1},placeholder:{defaultValue:{value:"'Jon Doe'",computed:!1},description:"Placeholder text displayed inside the input when it's empty",type:{name:"string"},required:!1},value:{defaultValue:{value:"''",computed:!1},description:"The current value of the input, making it a controlled component",type:{name:"string"},required:!1},onChange:{defaultValue:{value:"() => {}",computed:!1},description:"Callback function triggered when the input value changes",type:{name:"func"},required:!1},className:{defaultValue:{value:"''",computed:!1},description:"Additional class names for the input element to customize styling",type:{name:"string"},required:!1},labelClassName:{defaultValue:{value:"''",computed:!1},description:"Additional class names for the label element",type:{name:"string"},required:!1},wrapperClassName:{defaultValue:{value:"''",computed:!1},description:"Additional class names for the wrapper div",type:{name:"string"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"Disables the input when set to true",type:{name:"bool"},required:!1},required:{defaultValue:{value:"false",computed:!1},description:"Marks the input as required in forms",type:{name:"bool"},required:!1},inputProps:{defaultValue:{value:"{}",computed:!1},description:"Additional props to pass directly to the input element",type:{name:"object"},required:!1},inputStyles:{defaultValue:{value:"{}",computed:!1},description:"Inline styles for the input element",type:{name:"object"},required:!1},labelStyles:{defaultValue:{value:"{}",computed:!1},description:"Inline styles for the label element",type:{name:"object"},required:!1},wrapperStyles:{defaultValue:{value:"{}",computed:!1},description:"Inline styles for the wrapper div",type:{name:"object"},required:!1},helpText:{defaultValue:{value:"''",computed:!1},description:"Help text displayed below the input field",type:{name:"string"},required:!1},errorText:{defaultValue:{value:"''",computed:!1},description:"Error text displayed below the input field when in error state",type:{name:"string"},required:!1},error:{defaultValue:{value:"false",computed:!1},description:"Indicates whether the input is in an error state",type:{name:"bool"},required:!1},icon:{defaultValue:{value:"null",computed:!1},description:"Icon component to display inside the input field",type:{name:"element"},required:!1},hideLabel:{defaultValue:{value:"false",computed:!1},description:"Hides the label visually but keeps it accessible to screen readers",type:{name:"bool"},required:!1},ariaDescribedby:{defaultValue:{value:"''",computed:!1},description:"The id of the element that describes the input (for accessibility)",type:{name:"string"},required:!1}}}}}]);