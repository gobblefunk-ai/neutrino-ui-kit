(self.webpackChunkneutrino_ui_kit=self.webpackChunkneutrino_ui_kit||[]).push([[668],{"./stories/components/layout/Cards.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CardDefault:()=>CardDefault,CardDividedSections:()=>CardDividedSections,CardLargeWidth:()=>CardLargeWidth,CardSmallWidth:()=>CardSmallWidth,CardWithFooter:()=>CardWithFooter,CardWithGrayBody:()=>CardWithGrayBody,CardWithGrayFooter:()=>CardWithGrayFooter,CardWithHeader:()=>CardWithHeader,CardWithHeaderAndFooter:()=>CardWithHeaderAndFooter,ContentCardDefault:()=>ContentCardDefault,ResponsiveCardDefault:()=>ResponsiveCardDefault,ResponsiveCardEmpty:()=>ResponsiveCardEmpty,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Cards_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);function Card({children,header,footer,bodyBgColor,footerBgColor,divide,maxWidth}){const divideClasses=divide?"divide-y divide-gray-200":"";return react.createElement("div",{className:`bg-white shadow rounded-lg overflow-hidden ${divideClasses} ${maxWidth}`},header&&react.createElement("div",{className:"px-4 sm:px-6 py-5"},header),react.createElement("div",{className:`px-4 py-5 sm:p-6 ${bodyBgColor}`},children),footer&&react.createElement("div",{className:`px-4 py-4 sm:px-6 ${footerBgColor}`},footer))}Card.propTypes={children:prop_types_default().node,header:prop_types_default().node,footer:prop_types_default().node,bodyBgColor:prop_types_default().string,footerBgColor:prop_types_default().string,divide:prop_types_default().bool,maxWidth:prop_types_default().string},Card.defaultProps={children:null,header:null,footer:null,bodyBgColor:"",footerBgColor:"",divide:!1,maxWidth:"max-w-md"};const cards_Card=Card;Card.__docgenInfo={description:"Card component to display content within a styled container.\nSupports optional header and footer sections with configurable background colors.",methods:[],displayName:"Card",props:{children:{defaultValue:{value:"null",computed:!1},description:"Content to be displayed within the card body.\nSupports React nodes, such as text, images, or nested elements.",type:{name:"node"},required:!1},header:{defaultValue:{value:"null",computed:!1},description:"Optional content to be displayed in the card header.\nSupports React nodes.",type:{name:"node"},required:!1},footer:{defaultValue:{value:"null",computed:!1},description:"Optional content to be displayed in the card footer.\nSupports React nodes.",type:{name:"node"},required:!1},bodyBgColor:{defaultValue:{value:"''",computed:!1},description:"Tailwind CSS class for body background color. Example: 'bg-gray-50'.",type:{name:"string"},required:!1},footerBgColor:{defaultValue:{value:"''",computed:!1},description:"Tailwind CSS class for footer background color. Example: 'bg-gray-50'.",type:{name:"string"},required:!1},divide:{defaultValue:{value:"false",computed:!1},description:"Whether to add dividing lines between header, body, and footer.",type:{name:"bool"},required:!1},maxWidth:{defaultValue:{value:"'max-w-md'",computed:!1},description:"Tailwind CSS max-width class to control the card width. Example: 'max-w-sm', 'max-w-md', etc.",type:{name:"string"},required:!1}}};var FullWidthContainer=__webpack_require__("./src/components/containers/FullWidthContainer.jsx");function ResponsiveCard({children}){return react.createElement("div",{className:"bg-white shadow sm:rounded-lg w-full overflow-hidden"},react.createElement("div",{className:"px-4 py-5 sm:p-6"},children))}ResponsiveCard.propTypes={children:prop_types_default().node},ResponsiveCard.defaultProps={children:null};const cards_ResponsiveCard=ResponsiveCard;ResponsiveCard.__docgenInfo={description:"ResponsiveCard component to display content within a full-width, styled container Card, edge-to-edge on mobile.\n\nUse inside of FullWidthContainer",methods:[],displayName:"ResponsiveCard",props:{children:{defaultValue:{value:"null",computed:!1},description:"Content to be displayed within the card. Supports React nodes, such as text, images, or nested elements.",type:{name:"node"},required:!1}}};const ContentCard=({content})=>react.createElement(FullWidthContainer.A,null,react.createElement(cards_ResponsiveCard,null,content));ContentCard.propTypes={content:prop_types_default().node},ContentCard.defaultProps={content:null};const cards_ContentCard=ContentCard;ContentCard.__docgenInfo={description:"ResponsiveCard nested inside FullWidthContainer\n\nThis component renders content inside of a card, which is wrapped within a full-width container.\nIt accepts content as a child and provides a structured layout with responsive styling.",methods:[],displayName:"ContentCard",props:{content:{defaultValue:{value:"null",computed:!1},description:"`content` can be any valid React node that will be displayed inside the card.\nPropTypes.node covers any renderable content, allowing flexibility.",type:{name:"node"},required:!1}}};const defaultCardChildren=react.createElement("p",{className:"m-auto"},"This is some content within a card with the default max-width."),headerContent=react.createElement("h3",{className:"text-lg font-medium text-gray-900"},"Card Header"),footerContent=react.createElement("p",{className:"text-sm text-gray-500"},"Card Footer"),contentCardContent=react.createElement("p",null,"This is the content inside the card!"),responsiveCardContent=react.createElement("p",null,"This is a full-width card with rounded edges. Place it inside of a container."),Cards_stories={title:"Components/Layout/Cards",component:cards_Card,argTypes:{maxWidth:{control:"text",description:"Tailwind CSS max-width class to control the card width. Example: max-w-sm, max-w-lg"},header:{control:"text",description:"Content to be displayed in the card header. Supports React nodes."},footer:{control:"text",description:"Content to be displayed in the card footer. Supports React nodes."},bodyBgColor:{control:"text",description:"Tailwind CSS class for the card body's background color. Example: bg-gray-50"},footerBgColor:{control:"text",description:"Tailwind CSS class for the footer background color. Example: bg-gray-50"},divide:{control:"boolean",description:"Whether to add dividing lines between header, body, and footer sections."}}},CardTemplate=args=>react.createElement(cards_Card,args),CardDefault=CardTemplate.bind({});CardDefault.args={children:defaultCardChildren};const CardWithHeader=CardTemplate.bind({});CardWithHeader.args={header:headerContent,children:react.createElement("p",null,"This is some content within a card that includes a header section.")};const CardWithFooter=CardTemplate.bind({});CardWithFooter.args={children:react.createElement("p",null,"This is some content within a card that includes a footer section."),footer:footerContent};const CardWithHeaderAndFooter=CardTemplate.bind({});CardWithHeaderAndFooter.args={header:headerContent,children:react.createElement("p",null,"This is some content within a card that includes both header and footer sections."),footer:footerContent};const CardWithGrayFooter=CardTemplate.bind({});CardWithGrayFooter.args={children:react.createElement("p",null,"This card has a gray footer section."),footer:footerContent,footerBgColor:"bg-gray-50"};const CardWithGrayBody=CardTemplate.bind({});CardWithGrayBody.args={header:headerContent,children:react.createElement("p",null,"This card has a gray body section."),bodyBgColor:"bg-gray-50"};const CardDividedSections=CardTemplate.bind({});CardDividedSections.args={header:headerContent,children:react.createElement("p",null,"This card has dividing lines between the header, body, and footer sections."),footer:footerContent,divide:!0};const CardSmallWidth=CardTemplate.bind({});CardSmallWidth.args={maxWidth:"max-w-sm",children:react.createElement("p",null,"This card has a smaller width, controlled via the maxWidth prop.")};const CardLargeWidth=CardTemplate.bind({});CardLargeWidth.args={maxWidth:"max-w-lg",children:react.createElement("p",null,"This card has a larger width, controlled via the maxWidth prop.")};const ContentCardDefault=args=>react.createElement(cards_ContentCard,args);ContentCardDefault.args={content:contentCardContent},ContentCardDefault.storyName="Content Card / Default",ContentCardDefault.parameters={layout:"fullscreen"};const ResponsiveCardDefault=args=>react.createElement(cards_ResponsiveCard,args);ResponsiveCardDefault.args={children:responsiveCardContent},ResponsiveCardDefault.storyName="Responsive Card / Default",ResponsiveCardDefault.parameters={layout:"fullscreen"};const ResponsiveCardEmpty=args=>react.createElement(cards_ResponsiveCard,args);ResponsiveCardEmpty.args={children:null},ResponsiveCardEmpty.storyName="Responsive Card / Empty",ResponsiveCardEmpty.parameters={layout:"fullscreen"};const __namedExportsOrder=["CardDefault","CardWithHeader","CardWithFooter","CardWithHeaderAndFooter","CardWithGrayFooter","CardWithGrayBody","CardDividedSections","CardSmallWidth","CardLargeWidth","ContentCardDefault","ResponsiveCardDefault","ResponsiveCardEmpty"];CardDefault.parameters={...CardDefault.parameters,docs:{...CardDefault.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardDefault.parameters?.docs?.source}}},CardWithHeader.parameters={...CardWithHeader.parameters,docs:{...CardWithHeader.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardWithHeader.parameters?.docs?.source}}},CardWithFooter.parameters={...CardWithFooter.parameters,docs:{...CardWithFooter.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardWithFooter.parameters?.docs?.source}}},CardWithHeaderAndFooter.parameters={...CardWithHeaderAndFooter.parameters,docs:{...CardWithHeaderAndFooter.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardWithHeaderAndFooter.parameters?.docs?.source}}},CardWithGrayFooter.parameters={...CardWithGrayFooter.parameters,docs:{...CardWithGrayFooter.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardWithGrayFooter.parameters?.docs?.source}}},CardWithGrayBody.parameters={...CardWithGrayBody.parameters,docs:{...CardWithGrayBody.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardWithGrayBody.parameters?.docs?.source}}},CardDividedSections.parameters={...CardDividedSections.parameters,docs:{...CardDividedSections.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardDividedSections.parameters?.docs?.source}}},CardSmallWidth.parameters={...CardSmallWidth.parameters,docs:{...CardSmallWidth.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardSmallWidth.parameters?.docs?.source}}},CardLargeWidth.parameters={...CardLargeWidth.parameters,docs:{...CardLargeWidth.parameters?.docs,source:{originalSource:"args => <Card {...args} />",...CardLargeWidth.parameters?.docs?.source}}},ContentCardDefault.parameters={...ContentCardDefault.parameters,docs:{...ContentCardDefault.parameters?.docs,source:{originalSource:"args => <ContentCard {...args} />",...ContentCardDefault.parameters?.docs?.source}}},ResponsiveCardDefault.parameters={...ResponsiveCardDefault.parameters,docs:{...ResponsiveCardDefault.parameters?.docs,source:{originalSource:"args => <ResponsiveCard {...args} />",...ResponsiveCardDefault.parameters?.docs?.source}}},ResponsiveCardEmpty.parameters={...ResponsiveCardEmpty.parameters,docs:{...ResponsiveCardEmpty.parameters?.docs,source:{originalSource:"args => <ResponsiveCard {...args} />",...ResponsiveCardEmpty.parameters?.docs?.source}}}},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/components/containers/FullWidthContainer.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js");const FullWidthContainer=({children})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mx-auto sm:px-6 lg:px-8 max-w-7xl"},children);FullWidthContainer.propTypes={children:__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__)().node},FullWidthContainer.defaultProps={children:null};const __WEBPACK_DEFAULT_EXPORT__=FullWidthContainer;FullWidthContainer.__docgenInfo={description:"FullWidthContainer Component\n\nThis component serves as a responsive, full-width container. This component is intended to be used as a wrapper\nfor other content or components that should be displayed within a full-width\ncontainer.\n\nProps:\n- `children`: React nodes (components or elements) to be rendered inside the container.",methods:[],displayName:"FullWidthContainer",props:{children:{defaultValue:{value:"null",computed:!1},description:"`children` is any valid React node that will be rendered inside the container.\nThis can be text, HTML elements, or other React components.\nPropTypes.node covers any renderable content, ensuring flexibility.",type:{name:"node"},required:!1}}}}}]);